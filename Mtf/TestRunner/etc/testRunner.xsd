<?xml version="1.0" encoding="UTF-8"?>
<!--
/**
 * Schema for DI configuration
 *
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Open Software License (OSL 3.0)
 * that is bundled with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/osl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @copyright   Copyright (c) 2014 X.commerce, Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */
-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:element name="config">
        <xs:complexType>
            <xs:choice maxOccurs="unbounded">
                <xs:element name="suiteRule" type="suiteRuleType" minOccurs="0" maxOccurs="unbounded">

                </xs:element>
                <xs:element name="objectRule" type="objectRuleType" minOccurs="0" maxOccurs="unbounded">
                    <xs:unique name="uniqueObjectRuleParam">
                        <xs:annotation>
                            <xs:documentation>
                                Param `for` should be unique
                            </xs:documentation>
                        </xs:annotation>
                        <xs:selector xpath="for"/>
                        <xs:field xpath="@for"/>
                    </xs:unique>
                </xs:element>
            </xs:choice>
        </xs:complexType>

        <xs:unique name="uniquePreference">
            <xs:annotation>
                <xs:documentation>
                    Preference for each class should be unique in scope of file
                </xs:documentation>
            </xs:annotation>
            <xs:selector xpath="preference"/>
            <xs:field xpath="@for"/>
        </xs:unique>
        <xs:unique name="uniqueType">
            <xs:annotation>
                <xs:documentation>
                    Type name should be unique in scope of file
                </xs:documentation>
            </xs:annotation>
            <xs:selector xpath="type"/>
            <xs:field xpath="@name"/>
        </xs:unique>
        <xs:unique name="uniqueVirtualType">
            <xs:annotation>
                <xs:documentation>
                    Virtual type name should be unique in scope of file
                </xs:documentation>
            </xs:annotation>
            <xs:selector xpath="virtualType"/>
            <xs:field xpath="@name"/>
        </xs:unique>
    </xs:element>

    <xs:complexType name="suiteRuleType">
        <xs:annotation>
            <xs:documentation>
                With 'suiteRule' tag you can point allow and deny directives
            </xs:documentation>
        </xs:annotation>
        <xs:choice maxOccurs="unbounded">
            <xs:element name="allow" type="suiteAllowType" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="deny" type="suiteDenyType" minOccurs="0" maxOccurs="unbounded"/>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="suiteAllowType" mixed="true">
        <xs:choice maxOccurs="unbounded">
            <xs:element name="class" type="xs:string" maxOccurs="1"/>
            <xs:element name="module" type="xs:string" maxOccurs="1"/>
            <xs:element name="namespace" type="xs:string" maxOccurs="1"/>
            <xs:element name="type" type="xs:string" maxOccurs="1"/>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="suiteDenyType" mixed="true">
        <xs:choice maxOccurs="unbounded">
            <xs:element name="class" type="xs:string" maxOccurs="1"/>
            <xs:element name="module" type="xs:string" maxOccurs="1"/>
            <xs:element name="namespace" type="xs:string" maxOccurs="1"/>
            <xs:element name="type" type="xs:string" maxOccurs="1"/>
        </xs:choice>
    </xs:complexType>

    <xs:complexType name="objectRuleType">
        <xs:annotation>
            <xs:documentation>
                With 'objectRule' tag you can point allow and deny directives
            </xs:documentation>
        </xs:annotation>
        <xs:choice maxOccurs="unbounded">
            <xs:element name="allow" type="objectAllowType" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="deny" type="objectDenyType" minOccurs="0" maxOccurs="unbounded"/>
        </xs:choice>
        <xs:attribute name="for" type="xs:string" use="required"/>
    </xs:complexType>
    <xs:complexType name="objectAllowType" mixed="true">
        <xs:choice maxOccurs="unbounded">
            <xs:element name="type" type="xs:string" maxOccurs="1"/>
            <xs:element name="object" type="xs:string" maxOccurs="1"/>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="objectDenyType" mixed="true">
        <xs:choice maxOccurs="unbounded">
            <xs:element name="type" type="xs:string" maxOccurs="1"/>
            <xs:element name="object" type="xs:string" maxOccurs="1"/>
        </xs:choice>
    </xs:complexType>
</xs:schema>
